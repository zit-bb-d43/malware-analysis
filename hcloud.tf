# Set the variable value in *.tfvars file
# or using the -var="hcloud_token=..." CLI option
variable "hcloud_token" {}

# Configure the Hetzner Cloud Provider
provider "hcloud" {
  token = var.hcloud_token
}

data "hcloud_ssh_key" "ssh_key" {
  fingerprint = var.ssh_key_fingerprint
}


resource "hcloud_server" "inetsim" {
  name = var.hostname_inetsim
  image = var.image
  server_type = var.server_type
  location = var.location
  ssh_keys = [data.hcloud_ssh_key.ssh_key.id]
  user_data = data.template_file.userdata_inetsim.rendered
}

resource "hcloud_firewall" "malwarefw" {
  name = "maleware-firewall"
  rule {
    direction = "in"
    protocol  = "icmp"
    source_ips = [
      "0.0.0.0/0",
      "::/0"
    ]
  }
  rule {
    direction = "in"
    protocol  = "tcp"
    port      = "22"
    source_ips = [
      "0.0.0.0/0",
      "::/0"
    ]
  }
#  rule {
#    direction = "in"
#    protocol  = "tcp"
#    port      = "any"
#    source_ips = [
#      "${hcloud_server.inetsim.ipv4_address}/32",
#      "${hcloud_server.inetsim.ipv6_address}/128"
#    ]
#  }
#  rule {
#    direction = "in"
#    protocol  = "udp"
#    port      = "any"
#    source_ips = [
#      "${hcloud_server.inetsim.ipv4_address}/32",
#      "${hcloud_server.inetsim.ipv6_address}/128"
#    ]
#  }

  rule {
    direction = "out"
    protocol  = "tcp"
    port = "any"
    destination_ips = [
      "${hcloud_server.inetsim.ipv4_address}/32",
      "${hcloud_server.inetsim.ipv6_address}/128"
    ]
  }
  rule {
    direction = "out"
    protocol  = "udp"
    port = "any"
    destination_ips = [
      "${hcloud_server.inetsim.ipv4_address}/32",
      "${hcloud_server.inetsim.ipv6_address}/128"
    ]
  }
  rule {
    direction = "out"
    protocol  = "icmp"
    destination_ips = [
      "${hcloud_server.inetsim.ipv4_address}/32",
      "${hcloud_server.inetsim.ipv6_address}/128"
    ]
  }
  #update und dyndns erlauben
  rule {
    direction = "out"
    protocol  = "tcp"
    port = "443"
    destination_ips = [
      "185.12.64.3/32",
      "188.138.11.82/32",
      "2a01:4ff:ff00::3:3/128",
      "140.82.121.3/32",
      "140.82.121.4/32"
    ]
  }

}

resource "hcloud_server" "malware" {
  name = var.hostname_malware
  image = var.image
  server_type = var.server_type
  location = var.location
  ssh_keys = [data.hcloud_ssh_key.ssh_key.id]
  user_data = data.template_file.userdata_malware.rendered
  firewall_ids = [hcloud_firewall.malwarefw.id]
  depends_on = [hcloud_server.inetsim] 
}
